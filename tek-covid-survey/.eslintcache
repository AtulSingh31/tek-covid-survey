[{"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\index.js":"1","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\App.js":"2","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\store.js":"3","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\reportWebVitals.js":"4","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\EmpSurvey.js":"5","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\EmpNav.js":"6","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\AdminNav.js":"7","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\EmpGuidelines.js":"8","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\Login.js":"9","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\AdminGuidelines.js":"10","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\AdminTable.js":"11","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\reducers\\survey.js":"12","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\Survey.js":"13","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\reducers\\ActionTypes.js":"14","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\AdminTable1.js":"15","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\reducers\\ActionCreators.js":"16","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\validators.js":"17"},{"size":565,"mtime":1608539392772,"results":"18","hashOfConfig":"19"},{"size":977,"mtime":1608792457488,"results":"20","hashOfConfig":"19"},{"size":437,"mtime":1608557458968,"results":"21","hashOfConfig":"19"},{"size":375,"mtime":1608539392774,"results":"22","hashOfConfig":"19"},{"size":363,"mtime":1608539392769,"results":"23","hashOfConfig":"19"},{"size":1016,"mtime":1608539392768,"results":"24","hashOfConfig":"19"},{"size":819,"mtime":1608722619337,"results":"25","hashOfConfig":"19"},{"size":1435,"mtime":1608722619339,"results":"26","hashOfConfig":"19"},{"size":4327,"mtime":1608722619340,"results":"27","hashOfConfig":"19"},{"size":10485,"mtime":1608809124368,"results":"28","hashOfConfig":"19"},{"size":332,"mtime":1608539392765,"results":"29","hashOfConfig":"19"},{"size":313,"mtime":1608539392774,"results":"30","hashOfConfig":"19"},{"size":10579,"mtime":1608722619341,"results":"31","hashOfConfig":"19"},{"size":36,"mtime":1608539392773,"results":"32","hashOfConfig":"19"},{"size":8726,"mtime":1609669941014,"results":"33","hashOfConfig":"19"},{"size":1137,"mtime":1608722619343,"results":"34","hashOfConfig":"19"},{"size":584,"mtime":1608722619342,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"184sruu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\index.js",[],["77","78"],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\App.js",[],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\store.js",[],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\reportWebVitals.js",[],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\EmpSurvey.js",[],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\EmpNav.js",[],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\AdminNav.js",[],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\EmpGuidelines.js",["79"],"import React, { Component } from 'react';\r\nimport EmpNav from './EmpNav';\r\nimport axios from 'axios';\r\nclass EmpGuidelines extends Component {\r\n    state = {\r\n        guidelines: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8080/api/getGuidelines/1').then(response => {\r\n            console.log(response.data)\r\n            this.setState({\r\n                guidelines: response.data\r\n            })\r\n            console.log(this.state.guidelines)\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    render() {\r\n        const { guidelines } = this.state.guidelines\r\n        return (<div>\r\n            <EmpNav />\r\n            <div id=\"guidelineContainer\">\r\n                <div className=\"container\">\r\n                    <h1 id=\"guidelineH1\">Guidelines Page</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row\" >\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"col-md-6\" id=\"guidelines\">\r\n                        <ul>\r\n                            {\r\n                                this.state.guidelines.map(post => <li id=\"gl\">{post}</li>)\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default EmpGuidelines;","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\Login.js",["80","81","82","83","84","85","86"],"import React, { Component } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport tekbackground from '../tekbackground.jpg';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport axios from 'axios';\r\nclass Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    open:false\r\n  };\r\n  loginform={\r\n    email:'',\r\n    password:''\r\n  }\r\n\r\n  myemailChangeHandler = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n  myChangepasswordHandler = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n  submitHandler = e => {\r\n    e.preventDefault()\r\n      this.loginform.email=this.state.email;\r\n      this.loginform.password=this.state.password;\r\n    console.log(this.loginform)\r\n\r\n    axios.post('http://localhost:8080/api/emplogin', this.loginform)\r\n      .then(response => {\r\n        if (response.data === true) {\r\n          this.props.history.push(\"/empsurvey\");\r\n        }\r\n        else {\r\n          axios.post('http://localhost:8080/api/adminlogin', this.loginform)\r\n            .then(response => {\r\n              if (response.data === true) {\r\n                this.props.history.push(\"/admintables\");\r\n              }\r\n              else{\r\n                this.setState({ open: true});\r\n                console.log(this.state.open)\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.log(error)\r\n            })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n\r\n  }\r\n  handleClose = () => this.setState({ open: false })\r\n  render() {\r\n    const emailRegex = new RegExp('^\\w{5,}$');\r\n    const email_length = this.state.email.length > 2 || this.state.email.length == 0 ? false : true;\r\n    const password_length = this.state.password.length < 2 ? true : false;\r\n    const passwordRegex = new RegExp('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}');\r\n    \r\n\r\n    const disabled = this.state.email.length > 2 && this.state.password.match(passwordRegex) ? false : true;\r\n    const regex = this.state.password.match(passwordRegex) || this.state.password.length == 0 ? false : true;\r\n    return (\r\n      <div className=\"background\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\" id=\"image\">\r\n              <img src={tekbackground} alt=\"TGS\" />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"formfield\">\r\n                <h4>LOGIN</h4>\r\n                <form noValidate autoComplete=\"off\" onSubmit={this.submitHandler}>\r\n                  <TextField id=\"standard-basic1\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    name=\"email\"\r\n                    required\r\n                    onChange={this.myemailChangeHandler}\r\n                    validations={{ matchRegexp: emailRegex }}\r\n                    error={email_length} />\r\n                  <br />\r\n                  <TextField id=\"standard-basic2\" margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"Password\"\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    required\r\n                    error={regex}\r\n                    onChange={this.myChangepasswordHandler} />\r\n                  <br />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    id=\"submit\"\r\n                    disabled={disabled}\r\n                    color=\"primary\" >\r\n                    Submit\r\n                                </Button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Snackbar\r\n        open={this.state.open}\r\n        autoHideDuration={2000}\r\n        onClose={this.handleClose}\r\n        message=\"Incorrect Username or Password\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={this.handleClose}>\r\n              Retry\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\AdminGuidelines.js",["87","88","89","90","91","92","93","94"],"import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckboxGroup from 'react-checkbox-group'\r\nimport './AdminMasterTable.css';\r\nimport AdminNav from './AdminNav';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { tsImportEqualsDeclaration } from '@babel/types';\r\nimport axios from 'axios';\r\n\r\nvar id;\r\n\r\nclass AdminGuidelines extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            guidelines: [],\r\n            g1: false,\r\n            g2: false,\r\n            g3: false,\r\n            g4: false,\r\n            g5: false,\r\n            g6: false,\r\n            g7: false,\r\n            g8: false,\r\n            g9: false,\r\n            g10: false,\r\n            g11: false,\r\n            g12: false\r\n        }\r\n\r\n        this.onHandleChange = this.onHandleChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n  \r\n\r\n    onHandleChange = (event) => {\r\n        console.log(event.target.checked)\r\n        var s = event.target.name\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.checked\r\n        })\r\n        if(event.target.checked){\r\n            this.state.guidelines.push(event.target.value)\r\n        }\r\n        else{\r\n            this.state.guidelines.splice(this.state.guidelines.indexOf(event.target.value),1)\r\n        }\r\n        // event.target.checked = !event.target.checked\r\n        console.log(\"afterrrrrrrrrrr\" + typeof (s) + \" \" + typeof (g4))\r\n    }\r\n\r\n    submit(e){\r\n        e.preventDefault()\r\n        console.log(this.state.guidelines)\r\n        console.log(id)\r\n        axios.post('http://localhost:8080/api/setGuidelines/'+id, this.state.guidelines)\r\n        .then(response => {\r\n            console.log(\"Sent: \"+this.state.guidelines)\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      }\r\n\r\n    componentDidMount() {\r\n        var url = window.location.pathname\r\n        id = url.substring(url.lastIndexOf('/') + 1)\r\n        console.log(id)\r\n        fetch('http://localhost:8080/api/getGuidelines/' + id)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    guidelines: data\r\n                }, () => {\r\n                    console.log(data)\r\n                })\r\n\r\n                for (const [i, res] of this.state.guidelines.entries()) {\r\n                    if (res === \"Reduce the use of public transport.\") {\r\n                        this.setState({\r\n                            g1: true\r\n                        })\r\n                    }\r\n                    if (res === \"Keep the use of shared cabs to minimum.\") {\r\n                        this.setState({\r\n                            g2: true\r\n                        })\r\n                    }\r\n                    if (res === \"Avoid eating in external places.\") {\r\n                        this.setState({\r\n                            g3: true\r\n                        })\r\n                    }\r\n                    if (res === \"Follow social distancing norms while in office canteen.\") {\r\n                        this.setState({\r\n                            g4: true\r\n                        })\r\n                    }\r\n                    if (res === \"Avoid going to walks in parks near your house.\") {\r\n                        this.setState({\r\n                            g5: true\r\n                        })\r\n                    }\r\n                    if (res === \"Avoid interacting with people in your neighborhood.\") {\r\n                        this.setState({\r\n                            g6: true\r\n                        })\r\n                    }\r\n                    if (res === \"Avoid shaking hands with people, avoid hugging and kissing people.\") {\r\n                        this.setState({\r\n                            g7: true\r\n                        })\r\n                    }\r\n                    if (res === \"Maintain at least 1 metre (3 feet) distance with everyone.\") {\r\n                        this.setState({\r\n                            g8: true\r\n                        })\r\n                    }\r\n                    if (res === \"Please be responsible and wear masks while going out.\") {\r\n                        this.setState({\r\n                            g9: true\r\n                        })\r\n                    }\r\n                    if (res === \"Do not go for gatherings with friends and family and stay away from large gatherings.\") {\r\n                        this.setState({\r\n                            g10: true\r\n                        })\r\n                    }\r\n                    if (res === \"Do not come in close contact with those who are sick/ not well.\") {\r\n                        this.setState({\r\n                            g11: true\r\n                        })\r\n                    }\r\n                    if (res === \"Please come to office only when it is necessary\") {\r\n                        this.setState({\r\n                            g12: true\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        \r\n\r\n\r\n    }\r\n    render() {\r\n        const { guidelines } = this.state\r\n\r\n\r\n\r\n\r\n        return (<div>\r\n            <AdminNav />\r\n\r\n            <div className=\"admin-table\">\r\n                <form onSubmit={this.submit}>\r\n                    <div className=\"heading-center\">\r\n                        <h2 className=\"h22\">Guidelines</h2>\r\n                    </div>\r\n                    <div className=\"b2\">\r\n                        <div className=\"border\">\r\n                            <Checkbox name=\"g1\" id=\"g1\" checked={this.state.g1} value=\"Reduce the use of public transport.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Reduce the use of public transport.</label>\r\n                            <br />\r\n                            <Checkbox name=\"g2\" id=\"g2\" checked={this.state.g2} value=\"Keep the use of shared cabs to minimum.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Keep the use of shared cabs to minimum.</label>\r\n                            <br />\r\n\r\n                            <Checkbox name=\"g3\" id=\"g3\" checked={this.state.g3} value=\"Avoid eating in external places.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Avoid eating in external places.</label>\r\n                            <br />\r\n\r\n                            <Checkbox name=\"g4\" id=\"g4\" checked={this.state.g4} onChange={this.onHandleChange}\r\n                                value=\"Follow social distancing norms while in office canteen.\"\r\n                            /><label>Follow social distancing norms while in office canteen.</label>\r\n                            <br />\r\n                            <Checkbox name=\"g5\" id=\"g5\" checked={this.state.g5}\r\n                            value=\"Avoid going to walks in parks near your house.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Avoid going to walks in parks near your house.</label>\r\n                            <br />\r\n                            <Checkbox name=\"g6\" id=\"g6\" checked={this.state.g6}\r\n                            value=\"Avoid interacting with people in your neighborhood.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Avoid interacting with people in your neighborhood.</label>\r\n                            <br />\r\n                            <Checkbox name=\"g7\" id=\"g7\" checked={this.state.g7}\r\n                            value=\"Avoid shaking hands with people, avoid hugging and kissing people.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Avoid shaking hands with people, avoid hugging and kissing people.</label>\r\n                            <br />\r\n                            <Checkbox name=\"g8\" id=\"g8\" checked={this.state.g8}\r\n                            value=\"Maintain at least 1 metre (3 feet) distance with everyone.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Maintain at least 1 metre (3 feet) distance with everyone.</label>\r\n                            <br />\r\n\r\n                            <Checkbox name=\"g9\" id=\"g9\" checked={this.state.g9}\r\n                            value=\"Please be responsible and wear masks while going out.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Please be responsible and wear masks while going out.</label>\r\n                            <br />\r\n\r\n                            <Checkbox name=\"g10\" id=\"g10\" checked={this.state.g10}\r\n                            value=\"Do not go for gatherings with friends and family and stay away from large gatherings.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Do not go for gatherings with friends and family and stay away from large gatherings.</label>\r\n                            <br />\r\n\r\n                            <Checkbox name=\"g11\" id=\"g11\" checked={this.state.g11}\r\n                            value=\"Do not come in close contact with those who are sick/ not well.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Do not come in close contact with those who are sick/ not well.</label>\r\n                            <br />\r\n                            <Checkbox name=\"g12\" id=\"g12\" checked={this.state.g12}\r\n                            value=\"Please come to office only when it is necessary.\"\r\n                                onChange={this.onHandleChange}\r\n                            /><label>Please come to office only when it is necessary.</label>\r\n                            <br />\r\n                            <div style={{ paddingLeft: \"50%\" }}>\r\n                                <button className=\"button\">Submit</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default AdminGuidelines;","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\AdminTable.js",[],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\reducers\\survey.js",["95"],"import * as ActionTypes from './ActionTypes';\r\n\r\nexport const postSurvey = (state = { errMess: null}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_SURVEY:\r\n        var result=action.payload;\r\n        return {...state, errMess: null};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\Survey.js",["96","97","98","99","100","101","102","103","104","105","106"],"import React, { Component } from \"react\";\r\nimport { Field, reduxForm,formValueSelector,initialize,reset } from \"redux-form\";\r\nimport {Control, LocalForm, Errors} from 'react-redux-form'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { Typography,Button} from '@material-ui/core';\r\nimport {validators} from './validators'\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {postSurvey} from '../reducers/ActionCreators'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\n\r\nvar selectordisease={\r\n    diabetes:false,\r\n    asthma:false,\r\n    bloodPressure:false,\r\n    none:false\r\n}\r\nconst mapDispatchToProps = (dispatch)=>({\r\n  postSurvey:(q1,q2,q3,q4,q5,q6,q7) =>\r\n  dispatch(postSurvey(q1,q2,q3,q4,q5,q6,q7)\r\n)\r\n})\r\n\r\n\r\n\r\nconst handleDChange = (event) => {\r\n    console.log(selectordisease)\r\n   \r\n      \r\n    selectordisease[event.target.name]=!selectordisease[event.target.name] ;\r\n    };\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\nconst Q1 = ({ input, meta: { touched, error },...rest }) => (\r\n\r\n        \r\n<FormControl>\r\n    <FormLabel component=\"fieldset\"><span style={{ fontSize: '1.5rem' }}>  Mode of Transportation</span></FormLabel>\r\n      <RadioGroup {...input} {...rest} >\r\n        <FormControlLabel value=\"1\" control={<Radio  />} label=\"Public transport\" />\r\n        <FormControlLabel value=\"4\" control={<Radio />} label=\"Private transport\" />\r\n        <FormControlLabel value=\"2\" control={<Radio />} label=\"Taxi\" />\r\n        {touched && error && (\r\n       <span style={{ fontSize: \"10px\", color: \"red\" }}>{error}</span>\r\n      )}\r\n      </RadioGroup>\r\n</FormControl>\r\n  \r\n    \r\n  )\r\n\r\n  const Q2 = ({ input, meta: { touched, error }, ...rest }) => (\r\n\r\n        \r\n    <FormControl>\r\n        <FormLabel component=\"legend\"><span style={{ fontSize: '1.5rem' }}>  Where do you usually have your lunch?</span></FormLabel>\r\n          <RadioGroup {...input} {...rest} >\r\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"Restaurant or Some Other External Place\"/>\r\n            <FormControlLabel value=\"2\" control={<Radio />} label=\"Office Canteen.\" />\r\n            <FormControlLabel value=\"4\" control={<Radio />} label=\"Bring your own food.\" />\r\n            {touched && error && (\r\n       <span style={{ fontSize: \"10px\", color: \"red\" }}>{error}</span>\r\n      )}\r\n          </RadioGroup>\r\n    </FormControl>)\r\n    const Q3 = ({ input, meta: { touched, error },...rest }) => (\r\n    \r\n        \r\n        <FormControl>\r\n            <FormLabel component=\"legend\"><span style={{ fontSize: '1.5rem' }}>  Number of cases in 500m of your house</span></FormLabel>\r\n              <RadioGroup {...input} {...rest} >\r\n                <FormControlLabel value=\"4\" control={<Radio />} label=\"Less than 5\" />\r\n                <FormControlLabel value=\"3\" control={<Radio />} label=\"Between 5 - 10\" />\r\n                <FormControlLabel value=\"2\" control={<Radio />} label=\"Between 10 - 20\" />\r\n                <FormControlLabel value=\"1\" control={<Radio />} label=\"More than 20\" />\r\n                {touched && error && (\r\n               <span style={{ fontSize: \"10px\", color: \"red\" }}>{error}</span>\r\n              )}\r\n              </RadioGroup>\r\n        </FormControl>)\r\n    \r\n    const Q4 = ({ input, meta: { touched, error },...rest }) => (\r\n    \r\n        \r\n        <FormControl>\r\n            <FormLabel component=\"legend\"><span style={{ fontSize: '1.5rem' }}>  Have you or any of your family member been tested positive for Covid 19?</span></FormLabel>\r\n              <RadioGroup {...input} {...rest} > \r\n                <FormControlLabel value=\"4\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"1\" control={<Radio />} label=\"No\" />\r\n                \r\n                {touched && error && (\r\n               <span style={{ fontSize: \"10px\", color: \"red\" }}>{error}</span>\r\n              )}\r\n              </RadioGroup>\r\n        </FormControl>)\r\n    \r\n    const Q5 = ({ input, meta: { touched, error },...rest }) => (\r\n    \r\n        \r\n        <FormControl>\r\n            <FormLabel component=\"legend\"><span style={{ fontSize: '1.5rem' }}>  How many people do you usually interact with in a day?</span></FormLabel>\r\n              <RadioGroup {...input} {...rest}>\r\n                <FormControlLabel value=\"4\" control={<Radio />} label=\"Less than 5\" />\r\n                <FormControlLabel value=\"3\" control={<Radio />} label=\"Between 5 - 10\" />\r\n                <FormControlLabel value=\"2\" control={<Radio />} label=\"Between 10 - 20\" />\r\n                <FormControlLabel value=\"1\" control={<Radio />} label=\"More than 20\" />\r\n                \r\n                {touched && error && (\r\n               <span style={{ fontSize: \"10px\", color: \"red\" }}>{error}</span>\r\n              )}\r\n              </RadioGroup>\r\n        </FormControl>)\r\n     const Q6 = ({ input, meta: { touched, error },...rest }) => (\r\n    \r\n        \r\n        <FormControl>\r\n            <FormLabel component=\"legend\"><span style={{ fontSize: '1.5rem' }}>  Age </span></FormLabel>\r\n              <RadioGroup {...input} {...rest}>\r\n                <FormControlLabel value=\"4\" control={<Radio />} label=\"Between 18 - 30\" />\r\n                <FormControlLabel value=\"3\" control={<Radio />} label=\"Between 31 - 40\" />\r\n                <FormControlLabel value=\"2\" control={<Radio />} label=\"Between 41 - 50\" />\r\n                <FormControlLabel value=\"1\" control={<Radio />} label=\"Greater than 50\" />\r\n                \r\n                {touched && error && (\r\n               <span style={{ fontSize: \"10px\", color: \"red\" }}>{error}</span>\r\n              )}\r\n              </RadioGroup>\r\n        </FormControl>)\r\n    const Q7 = ({ input, meta: { touched, error },...rest }) => (\r\n        <div >\r\n        <FormControl component=\"fieldset\" >\r\n          <FormLabel component=\"legend\"><span style={{ fontSize: '1.5rem' }}>  Do you have any of the following diseases?</span></FormLabel>\r\n          <FormGroup {...input} {...rest}>\r\n            <FormControlLabel \r\n             \r\n              control={<Checkbox  name=\"diabetes\"\r\n                id=\"diabetes\" \r\n                onChange={handleDChange}\r\n                \r\n              />}\r\n              label=\"Diabetes\" \r\n            />\r\n            <FormControlLabel \r\n              control={<Checkbox  name=\"asthma\" id=\"asthma\"  onChange={handleDChange} />}\r\n              label=\"Asthma\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"\"name=\"bloodPressure\" id=\"bloodPressure\"  onChange={handleDChange} />}\r\n              label=\"Blood Pressure\"\r\n            />\r\n            \r\n          </FormGroup>\r\n          \r\n        </FormControl>\r\n      \r\n      </div>\r\n    )\r\n    \r\n  \r\n\r\n \r\n\r\nclass SurveyForm extends Component{\r\n \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          open: false\r\n        }\r\n       \r\n    this.handleClose=this.handleClose.bind(this)\r\n    }\r\nhandleClose = () => this.setState({ open: false })\r\n\r\n \r\nhandleSubmit(values){\r\n    alert(JSON.stringify(values))\r\n}\r\n\r\n\r\nrender(){\r\n    const { handleSubmit, reset, pristine, submitting, valid } = this.props;\r\n    return(\r\n        <div>\r\n        <Typography><h3 id=\"surveypage\">Covid-19 Employee Survey</h3></Typography>\r\n      \r\n        <hr/>\r\n        \r\n        <form  className=\"surveyForm\" onSubmit={handleSubmit(values =>{ \r\n            \r\n            values.q7=selectordisease\r\n            console.log(values);\r\n\r\n            this.props.postSurvey(values.q1,values.q2,values.q3,values.q4,values.q5,values.q6,values.q7);\r\n            this.setState({\r\n              open:true\r\n            })\r\n        })}>   \r\n        <div>\r\n        <List>\r\n        <ListItem divider={true}>\r\n        <ListItemText>\r\n        <Field name=\"q1\" component={Q1}></Field></ListItemText></ListItem>\r\n        <ListItem divider={true}>\r\n        <ListItemText>\r\n        <Field  name=\"q2\" component={Q2}></Field></ListItemText></ListItem>\r\n        <ListItem divider={true}>\r\n        <ListItemText>\r\n          <Field  name=\"q3\" component={Q3}></Field></ListItemText></ListItem>\r\n          <ListItem divider={true}>\r\n          <ListItemText>\r\n          <Field  name=\"q4\" component={Q4}></Field></ListItemText></ListItem>\r\n          <ListItem divider={true}>\r\n          <ListItemText>\r\n          <Field  name=\"q5\" component={Q5}>\r\n          \r\n          </Field>\r\n          </ListItemText></ListItem>\r\n          <ListItem divider={true}>\r\n          <ListItemText>\r\n          <Field  name=\"q6\" component={Q6}>\r\n          \r\n          </Field>\r\n          </ListItemText></ListItem>\r\n          <ListItem divider={true}>\r\n          <ListItemText>\r\n          <Field  name=\"q7\" component={Q7} >\r\n          \r\n          </Field>\r\n          </ListItemText></ListItem></List>\r\n      </div> \r\n      <div style={{textAlign:\"center\"}}>\r\n        <Button   type=\"submit\" variant=\"contained\" disabled={!valid || pristine || submitting} color=\"primary\" >Submit</Button>\r\n        </div>\r\n        </form>\r\n        <Snackbar\r\n        open={this.state.open}\r\n        autoHideDuration={2000}\r\n        onClose={() => { this.setState({\r\n          open:false\r\n        })}}\r\n        message=\"Submit successful\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={() => { this.setState({\r\n              open:false\r\n            })}}>\r\n              OK!\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nconst selector = formValueSelector('SurveyForm')\r\nSurveyForm=connect(undefined,\r\n  mapDispatchToProps\r\n)(SurveyForm)\r\nexport default reduxForm({\r\n    form: 'SurveyForm',\r\n    validate: validators,\r\n    onSubmitSuccess: (result,dispatch) => {\r\n      dispatch(reset('SurveyForm'));\r\n      window.location.reload();\r\n\r\n    //  console.log(\"Submit success\"+this.form.values)\r\n      \r\n    }\r\n  })(SurveyForm)\r\n","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\reducers\\ActionTypes.js",[],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\AdminTable1.js",["107","108","109"],"C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\reducers\\ActionCreators.js",["110","111"],"import * as ActionTypes from './ActionTypes'\r\nimport {reset} from 'redux-form';\r\nexport const addSurvey = (survey) => ({\r\n    type: ActionTypes.ADD_SURVEY,\r\n    payload: survey\r\n});\r\nexport const postSurvey = (q1,q2,q3,q4,q5,q6,q7)=>(dispatch)=>{\r\n    const payload={\r\n        q1:q1,\r\n        q2:q2,\r\n        q3:q3,\r\n        q4:q4,\r\n        q5:q5,\r\n        q6:q6,\r\n        q7:q7\r\n    }\r\n    console.log(payload)\r\n    return fetch(`http://localhost:8080/api/` + `addSurvey/1`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(payload),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          \r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addSurvey(response)))\r\n    .catch(error =>  { console.log('post Survey', error.message); });\r\n};\r\n","C:\\Users\\krikaushal\\Desktop\\teksurvey front\\tek-covid-survey\\tek-covid-survey\\src\\Components\\validators.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":21,"column":17,"nodeType":"118","messageId":"119","endLine":21,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":59,"column":37,"nodeType":"122","messageId":"123","endLine":59,"endColumn":38,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":60,"column":81,"nodeType":"127","messageId":"128","endLine":60,"endColumn":83},{"ruleId":"116","severity":1,"message":"129","line":61,"column":11,"nodeType":"118","messageId":"119","endLine":61,"endColumn":26},{"ruleId":"120","severity":1,"message":"130","line":62,"column":95,"nodeType":"122","messageId":"123","endLine":62,"endColumn":96,"suggestions":"131"},{"ruleId":"125","severity":1,"message":"126","line":66,"column":90,"nodeType":"127","messageId":"128","endLine":66,"endColumn":92},{"ruleId":"132","severity":1,"message":"133","line":84,"column":21,"nodeType":"134","endLine":84,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":95,"column":21,"nodeType":"134","endLine":95,"endColumn":29},{"ruleId":"116","severity":1,"message":"135","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":21},{"ruleId":"116","severity":1,"message":"136","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":24},{"ruleId":"116","severity":1,"message":"137","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":19},{"ruleId":"116","severity":1,"message":"138","line":8,"column":8,"nodeType":"118","messageId":"119","endLine":8,"endColumn":17},{"ruleId":"116","severity":1,"message":"139","line":9,"column":8,"nodeType":"118","messageId":"119","endLine":9,"endColumn":17},{"ruleId":"116","severity":1,"message":"140","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":35},{"ruleId":"116","severity":1,"message":"141","line":82,"column":29,"nodeType":"118","messageId":"119","endLine":82,"endColumn":30},{"ruleId":"116","severity":1,"message":"117","line":150,"column":17,"nodeType":"118","messageId":"119","endLine":150,"endColumn":27},{"ruleId":"116","severity":1,"message":"142","line":6,"column":13,"nodeType":"118","messageId":"119","endLine":6,"endColumn":19},{"ruleId":"116","severity":1,"message":"143","line":2,"column":45,"nodeType":"118","messageId":"119","endLine":2,"endColumn":55},{"ruleId":"116","severity":1,"message":"144","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":16},{"ruleId":"116","severity":1,"message":"145","line":3,"column":18,"nodeType":"118","messageId":"119","endLine":3,"endColumn":27},{"ruleId":"116","severity":1,"message":"146","line":3,"column":29,"nodeType":"118","messageId":"119","endLine":3,"endColumn":35},{"ruleId":"116","severity":1,"message":"147","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":17},{"ruleId":"116","severity":1,"message":"148","line":15,"column":8,"nodeType":"118","messageId":"119","endLine":15,"endColumn":22},{"ruleId":"116","severity":1,"message":"149","line":18,"column":8,"nodeType":"118","messageId":"119","endLine":18,"endColumn":15},{"ruleId":"116","severity":1,"message":"150","line":20,"column":8,"nodeType":"118","messageId":"119","endLine":20,"endColumn":22},{"ruleId":"116","severity":1,"message":"151","line":21,"column":8,"nodeType":"118","messageId":"119","endLine":21,"endColumn":14},{"ruleId":"116","severity":1,"message":"152","line":201,"column":27,"nodeType":"118","messageId":"119","endLine":201,"endColumn":32},{"ruleId":"116","severity":1,"message":"153","line":278,"column":7,"nodeType":"118","messageId":"119","endLine":278,"endColumn":15},{"ruleId":"116","severity":1,"message":"154","line":14,"column":8,"nodeType":"118","messageId":"119","endLine":14,"endColumn":14},{"ruleId":"116","severity":1,"message":"155","line":134,"column":15,"nodeType":"118","messageId":"119","endLine":134,"endColumn":24},{"ruleId":"116","severity":1,"message":"156","line":141,"column":15,"nodeType":"118","messageId":"119","endLine":141,"endColumn":25},{"ruleId":"116","severity":1,"message":"157","line":2,"column":9,"nodeType":"118","messageId":"119","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":18,"column":47,"nodeType":"127","messageId":"160","endLine":18,"endColumn":48},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'guidelines' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\w.","Literal","unnecessaryEscape",["163","164"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'password_length' is assigned a value but never used.","Unnecessary escape character: \\d.",["165","166"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CheckboxGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","'tsImportEqualsDeclaration' is defined but never used.","'i' is assigned a value but never used.","'result' is assigned a value but never used.","'initialize' is defined but never used.","'Control' is defined but never used.","'LocalForm' is defined but never used.","'Errors' is defined but never used.","'compose' is defined but never used.","'FormHelperText' is defined but never used.","'Divider' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'reset' is assigned a value but never used.","'selector' is assigned a value but never used.","'Button' is defined but never used.","'emptyRows' is assigned a value but never used.","'bodyStyles' is assigned a value but never used.","'reset' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"messageId":"167","fix":"168","desc":"169"},{"messageId":"170","fix":"171","desc":"172"},{"messageId":"167","fix":"173","desc":"169"},{"messageId":"170","fix":"174","desc":"172"},"removeEscape",{"range":"175","text":"176"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"177","text":"178"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"179","text":"176"},{"range":"180","text":"178"},[1681,1682],"",[1681,1681],"\\",[1965,1966],[1965,1965]]